{
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_governor",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "OrcsToken__BatchTransferArrayMismatch",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "OrcsToken__MintingDisabled",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "OrcsToken__NotEnoughTokensToRedeem",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "OrcsToken__OnlyGovernor",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "OrcsToken__PostAirdropValuesNotSet",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "OrcsToken__RedeemValueAlreadySet",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "OrcsToken__TransferFailed",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address[]",
            "name": "recipients",
            "type": "address[]"
          },
          {
            "indexed": false,
            "internalType": "uint256[]",
            "name": "amounts",
            "type": "uint256[]"
          }
        ],
        "name": "BatchTransfer",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "ERC20Withdrawn",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "ETHWithdrawn",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "airdropTokenAddress",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "redeemValue",
            "type": "uint256"
          }
        ],
        "name": "PostAirdropValueSet",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "buyer",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "TokensPurchased",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "tokensRedeemed",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "airdropTokensReceived",
            "type": "uint256"
          }
        ],
        "name": "TokensRedeemed",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "stateMutability": "payable",
        "type": "fallback"
      },
      {
        "inputs": [],
        "name": "GOVERNOR",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "airdropToken",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address[]",
            "name": "_recipients",
            "type": "address[]"
          },
          {
            "internalType": "uint256[]",
            "name": "_amounts",
            "type": "uint256[]"
          }
        ],
        "name": "batchTransfer",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "mintingDisabled",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "purchaseTokens",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "name": "redeemTokens",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "redeemValue",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_airdropToken",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_redeemValue",
            "type": "uint256"
          }
        ],
        "name": "setPostAirdropValue",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_recipient",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_token",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "name": "withdrawERC20",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "name": "withdrawETH",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "stateMutability": "payable",
        "type": "receive"
      }
    ],
    "metadata": {
      "optimizer_settings": {
        "is_debug_logging_enabled": false,
        "is_fallback_to_size_enabled": false,
        "is_system_request_memoization_disabled": false,
        "is_verify_each_enabled": false,
        "level_back_end": "Aggressive",
        "level_middle_end": "Aggressive",
        "level_middle_end_size": "Zero"
      },
      "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OrcsToken__BatchTransferArrayMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrcsToken__MintingDisabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrcsToken__NotEnoughTokensToRedeem\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrcsToken__OnlyGovernor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrcsToken__PostAirdropValuesNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrcsToken__RedeemValueAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OrcsToken__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETHWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"airdropTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemValue\",\"type\":\"uint256\"}],\"name\":\"PostAirdropValueSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensRedeemed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"airdropTokensReceived\",\"type\":\"uint256\"}],\"name\":\"TokensRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"GOVERNOR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintingDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchaseTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"redeemTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_airdropToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_redeemValue\",\"type\":\"uint256\"}],\"name\":\"setPostAirdropValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"setPostAirdropValue(address,uint256)\":{\"details\":\"_redeemValue must be calculated off-chain to avoid division/precision errors\",\"params\":{\"_airdropToken\":\"address of airdrop token (zero address for ETH)\",\"_redeemValue\":\"amount of airdrop token that can be claimed for 1 * 10**18 $Orcs\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"airdropToken()\":{\"notice\":\"the address of the airdropped zkSync reward token - will be address(0) if native currency\"},\"mintingDisabled()\":{\"notice\":\"if true (in the event of airdrop) minting will not be possible\"},\"redeemValue()\":{\"notice\":\"the amount of airdrop tokens that may be claimed in exchange for 1 * 10**18 $Orcs\"},\"setPostAirdropValue(address,uint256)\":{\"notice\":\"sets redeem value for $ORCS token following zkSync Airdropdisables minting so supply becomes capped at current supply\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/hello-world/contracts/OrcTokens.sol\":\"OrcsToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"/hello-world/contracts/OrcTokens.sol\":{\"keccak256\":\"0xad8d2dbe2fead891b6bfacee880fed7e67ed7aee279337dfd5f424a164fc025a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f6fefd556015cebd00666d14027a39b99201e22dd1d5c931fd0b46a0d6be8a68\",\"dweb:/ipfs/QmPG5HjxmFV8xzB369gxqtaBRtmjuYrzwvezieqHaMwrnh\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
      "solc_version": "0.8.19",
      "solc_zkvm_edition": null,
      "zk_version": "1.4.0"
    },
    "evm": {
      "legacyAssembly": null,
      "assembly": "\t.text\n\t.file\t\"OrcTokens.sol:OrcsToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[11]\n\tptr.add\tr1, r0, r7\n\tadd\tr7, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tptr.add\tr7, r1, stack[@ptr_return_data]\n\tptr.add\tr7, r0, stack[@ptr_calldata]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_127\n\tld\tr7, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.le\t@.BB0_54\n\tsub.s!\t@CPI0_12[0], r2, r3\n\tjump.le\t@.BB0_68\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.gt\t@.BB0_78\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.eq\t@.BB0_239\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.eq\t@.BB0_241\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.ne\t@.BB0_127\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[8], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_258\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_59[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_60[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB0_257\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r1, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_79[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_80[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_6:\n\tadd\t191, r1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tshr.s!\t5, r1, r3\n\tjump.eq\t@.BB0_320\n\tadd\tr0, r0, r4\n.BB0_8:\n\tshl.s\t5, r4, r5\n\tptr.add\tr7, r5, r6\n\tld\tr6, r6\n\tadd\t160, r5, r5\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_8\n.BB0_320:\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r3, r3\n\tptr.add\tr7, r3, r4\n\tshl.s\t3, r2, r2\n\tadd\t160, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr3, r2\n.BB0_10:\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t160, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.le\t@.BB0_12\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_54:\n\tsub.s!\t@CPI0_26[0], r2, r3\n\tjump.gt\t@.BB0_61\n\tsub.s!\t@CPI0_33[0], r2, r3\n\tjump.le\t@.BB0_56\n\tsub.s!\t@CPI0_34[0], r2, r3\n\tjump.eq\t@.BB0_95\n\tsub.s!\t@CPI0_35[0], r2, r3\n\tjump.eq\t@.BB0_98\n\tsub.s!\t@CPI0_36[0], r2, r2\n\tjump.ne\t@.BB0_127\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_108\n\tadd\tstack-[7], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_111\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_83[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n.BB0_110:\n\tst.1\tr2, r3\n\tadd\t@CPI0_51[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_69[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_68:\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.le\t@.BB0_69\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.eq\t@.BB0_190\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.eq\t@.BB0_195\n\tsub.s!\t@CPI0_23[0], r2, r2\n\tjump.ne\t@.BB0_127\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_8[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r3\n\tadd\t@CPI0_62[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_62[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_62[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, r3\n\tptr.add\tr7, r3, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[9]\n\tsub.s!\t@CPI0_8[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t36, r2, r8\n\tadd\tstack-[9], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tr2, r8, r2\n\tsub!\tr2, r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_8[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r3\n\tadd\t@CPI0_62[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_62[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_62[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r2, stack-[2]\n\tptr.add.s\tstack-[2], r7, r3\n\tld\tr3, r3\n\tadd\tr3, r0, stack-[8]\n\tsub.s!\t@CPI0_8[0], r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t36, r2, r3\n\tadd\tstack-[8], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\tr2, r0, stack-[1]\n\tadd\tr3, r0, stack-[5]\n\tadd\tr2, r3, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr8, r0, stack-[4]\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_141\n\tld\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_143\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_217\n\tadd\tstack-[8], r0, r2\n\tsub!\tstack-[9], r2, r1\n\tjump.ne\t@.BB0_221\n\tsub!\tstack-[9], r0, r1\n\tadd\tstack-[4], r0, r8\n\tjump.ne\t@.BB0_220\n.BB0_224:\n\tld.1\t64, r1\n\tadd\t64, r0, r2\n\tst.1.inc\tr1, r2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[9], r0, r4\n\tst.1\tr2, r4\n\tadd\t96, r1, r2\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_232\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tadd\tr0, r0, r5\n.BB0_231:\n\tptr.add\tr4, r8, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI0_67[0], r6, r7\n\tjump.ge\t@.BB0_2\n\tst.1.inc\tr2, r6, r2\n\tadd\t32, r8, r8\n\tadd\t1, r5, r5\n\tsub.s!\tstack-[9], r5, r6\n\tjump.lt\t@.BB0_231\n.BB0_232:\n\tsub\tr2, r1, r4\n\tst.1\tr3, r4\n\tadd\tstack-[9], r0, r4\n\tst.1.inc\tr2, r4, r3\n\tsub.s!\t@CPI0_70[0], r4, r4\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[1], r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB0_316\n\tadd\tstack-[2], r0, r6\n\tadd\t32, r6, r6\n\tptr.add\tstack[@ptr_calldata], r6, r6\n\tadd\tr0, r0, r7\n.BB0_236:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr6, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_236\n.BB0_316:\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB0_238\n.BB0_238:\n\tsub\tstack-[1], r1, r3\n\tadd\tr3, r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t32, r2, r2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_71[0], r0, r4\n\tjump\t@.BB0_126\n.BB0_61:\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.le\t@.BB0_62\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.eq\t@.BB0_128\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.eq\t@.BB0_136\n\tsub.s!\t@CPI0_30[0], r2, r2\n\tjump.ne\t@.BB0_127\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_141\n\tld\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_143\n\tcontext.gas_left\tr1\n\tadd\tstack-[9], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_170\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB0_172\n.BB0_78:\n\tsub.s!\t@CPI0_14[0], r2, r3\n\tjump.eq\t@.BB0_259\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.eq\t@.BB0_304\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tjump.ne\t@.BB0_127\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_4[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[8], r0, r2\n\tjump\t@.BB0_194\n.BB0_12:\n\tld.1\t64, r8\n\tsub.s!\t@CPI0_5[0], r8, r1\n\tjump.gt\t@.BB0_4\n\tadd\t64, r8, r1\n\tst.1\t64, r1\n\tadd\t5, r0, r1\n\tst.1.inc\tr8, r1, r9\n\tadd\t@CPI0_6[0], r0, r2\n\tst.1\tr9, r2\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_5[0], r5, r2\n\tjump.gt\t@.BB0_4\n\tadd\t64, r5, r2\n\tst.1\t64, r2\n\tst.1.inc\tr5, r1, r4\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\tr4, r1\n\tld.1\tr8, r7\n\tsub.s!\t@CPI0_8[0], r7, r1\n\tjump.gt\t@.BB0_4\n\tadd\t3, r0, r6\n\tsload\tr6, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_16\n\tsub.s!\t32, r3, r1\n\tadd\tr5, r0, stack-[8]\n\tadd\tr4, r0, stack-[7]\n\tjump.lt\t@.BB0_21\n\tadd\tr3, r0, stack-[2]\n\tadd\tr9, r0, stack-[3]\n\tadd\tr8, r0, stack-[4]\n\tadd\tr7, r0, stack-[5]\n\tadd\tr6, r0, stack-[6]\n\tst.1\t0, r6\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r7\n\tadd\t31, r7, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r7, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[7], r0, r4\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[4], r0, r8\n\tadd\tstack-[3], r0, r9\n\tjump.ge\t@.BB0_21\n.BB0_22:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_22\n.BB0_21:\n\tsub.s!\t31, r7, r1\n\tjump.le\t@.BB0_31\n\tadd\tr8, r0, stack-[4]\n\tadd\tr7, r0, stack-[5]\n\tadd\tr6, r0, stack-[6]\n\tst.1\t0, r6\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tadd\tstack-[5], r0, r7\n\tand!\tr7, r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r8\n\tjump.eq\t@.BB0_28\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_27:\n\tadd\tr2, r8, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_27\n.BB0_28:\n\tsub!\tr3, r7, r3\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[6], r0, r6\n\tjump.ge\t@.BB0_30\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r8, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_30:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[7], r0, r4\n\tjump\t@.BB0_23\n.BB0_56:\n\tsub.s!\t@CPI0_37[0], r2, r3\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_38[0], r2, r2\n\tjump.ne\t@.BB0_127\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_4[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_94\n.BB0_69:\n\tsub.s!\t@CPI0_24[0], r2, r1\n\tjump.eq\t@.BB0_185\n\tsub.s!\t@CPI0_25[0], r2, r1\n\tjump.ne\t@.BB0_127\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[11]\n\tadd\t0, r0, stack-[10]\n\tcontext.sp\tr1\n\tsub.s\t11, r1, r1\n\tshl.s\t5, r1, r1\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tjump\t@.BB0_187\n.BB0_62:\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.eq\t@.BB0_112\n\tsub.s!\t@CPI0_32[0], r2, r1\n\tjump.ne\t@.BB0_127\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_116\n\tcontext.get_context_u128\tr1\n\tadd\tr1, r0, stack-[9]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tcontext.caller\tr4\n\tand!\t@CPI0_4[0], r4, r5\n\tjump.ne\t@.BB0_121\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t31, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_68[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_82[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_239:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t6, r0, r1\n\tjump\t@.BB0_97\n.BB0_241:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_16\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_246\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_244\n.BB0_95:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tjump\t@.BB0_97\n.BB0_98:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_114\n.BB0_190:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n.BB0_194:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_97:\n\tsload\tr1, r1\n\tjump\t@.BB0_114\n.BB0_195:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_141\n\tld\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_143\n\tadd\t6, r0, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_201\n\tsub!\tstack-[8], r0, r2\n\tjump.eq\t@.BB0_2\n\tadd\t7, r0, r2\n\tsload\tr2, r3\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tor\t1, r3, r3\n\tsstore\tr2, r3\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_73[0], r3, r3\n\tadd\tstack-[9], r0, r4\n\tor\tr3, r4, r3\n\tsstore\tr2, r3\n\tadd\tstack-[8], r0, r3\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tst.1\tr1, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_74[0], r0, r4\n\tjump\t@.BB0_126\n.BB0_128:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tptr.add\tr7, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tstack-[8], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tptr.add.s\t36, r3, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[8], r1, r3\n\tsub!\tr3, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_122\n\tjump\t@.BB0_134\n.BB0_136:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r7, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI0_63[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_64[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_141\n\tld\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_143\n\tld.1\t64, r10\n\tadd\t36, r10, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_43[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_146\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_156\n.BB0_259:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r3\n\tadd\t6, r0, r1\n\tsload\tr1, r4\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_263\n\tadd\t@CPI0_58[0], r0, r1\n\tjump\t@.BB0_117\n.BB0_304:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r7, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_4[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r7, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_94:\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_40[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_83\n.BB0_16:\n\tadd\t@CPI0_79[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_185:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n.BB0_187:\n\tand\t@CPI0_4[0], r1, r1\n\tjump\t@.BB0_114\n.BB0_112:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t18, r0, r1\n.BB0_114:\n\tst.1\t128, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_116:\n\tadd\t@CPI0_65[0], r0, r1\n.BB0_117:\n\tst.1\t128, r1\n\tadd\t@CPI0_57[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_141:\n\trevert\n.BB0_263:\n\tsub!\tr3, r4, r1\n\tjump.ge\t@.BB0_265\n\tadd\t@CPI0_56[0], r0, r1\n\tjump\t@.BB0_117\n.BB0_83:\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_86\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_84\n.BB0_143:\n\tld.1\t64, r1\n\tadd\t@CPI0_76[0], r0, r2\n.BB0_162:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_46[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_121:\n\tadd\t2, r0, r1\n\tsload\tr1, r3\n\tadd\tstack-[9], r3, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB0_123\n.BB0_122:\n\tadd\t@CPI0_79[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_5\n.BB0_246:\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_244\n\tadd\t@CPI0_61[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_248:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_248\n\tadd\t192, r3, r2\n.BB0_244:\n.BB0_84:\n\tsub.s\t128, r2, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_265:\n\tcontext.caller\tr2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_267\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t33, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_53[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_55[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_86:\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_84\n\tadd\t@CPI0_84[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_88:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_88\n\tadd\t192, r3, r2\n\tjump\t@.BB0_84\n.BB0_31:\n\tsub!\tr7, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_33\n\tld.1\tr9, r1\n.BB0_33:\n\tshl.s\t3, r7, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r7, r2\n\tor\tr1, r2, r1\n.BB0_23:\n\tsstore\tr6, r1\n\tld.1\tr5, r6\n\tsub.s!\t@CPI0_8[0], r6, r1\n\tjump.gt\t@.BB0_4\n\tadd\t4, r0, r5\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_16\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_39\n\tadd\tr3, r0, stack-[4]\n\tadd\tr6, r0, stack-[6]\n\tadd\tr5, r0, stack-[5]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r6\n\tadd\t31, r6, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r6, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tstack-[5], r0, r5\n\tjump.ge\t@.BB0_39\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_39:\n\tsub.s!\t31, r6, r1\n\tjump.le\t@.BB0_49\n\tadd\tr6, r0, stack-[6]\n\tadd\tr5, r0, stack-[5]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tand!\tstack-[6], r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r6\n\tjump.eq\t@.BB0_46\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_45:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_45\n.BB0_46:\n\tadd\tstack-[6], r0, r5\n\tsub!\tr3, r5, r3\n\tjump.ge\t@.BB0_48\n\tshl.s\t3, r5, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[8], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_48:\n\tadd\t1, r0, r1\n\tshl.s\t1, r5, r2\n\tadd\tstack-[9], r0, r3\n\tadd\tstack-[5], r0, r5\n\tjump\t@.BB0_41\n.BB0_123:\n\tadd\tr4, r0, stack-[7]\n\tsstore\tr1, r2\n\tadd\tr5, r0, stack-[8]\n\tst.1\t0, r5\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[9], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_42[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[8], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_81[0], r0, r4\n\tadd\tstack-[7], r0, r5\n\tjump\t@.BB0_126\n.BB0_267:\n\tadd\tr4, r0, stack-[7]\n\tadd\tr3, r0, stack-[9]\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r2\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s!\tstack-[9], r2, r1\n\tjump.ge\t@.BB0_270\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_49[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_50[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB0_257:\n\tst.1\tr2, r3\n\tadd\t@CPI0_51[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_52[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_258:\n\tsub\tr1, r3, r3\n.BB0_134:\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[9], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tjump\t@.BB0_135\n.BB0_170:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tadd\tstack-[8], r0, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_182\n\tadd\tstack-[9], r0, r2\n\tjump\t@.BB0_181\n.BB0_201:\n\tld.1\t64, r1\n\tadd\t@CPI0_72[0], r0, r2\n\tjump\t@.BB0_162\n.BB0_146:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_44[0], r1, r1\n\tadd\tr10, r0, stack-[6]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_314\n\tadd\tr0, r0, r7\n.BB0_148:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_148\n.BB0_314:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_150\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_150:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_151\n.BB0_156:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_8[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr10, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_161\n\tadd\t64, r1, r2\n\tadd\tstack-[7], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_77[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_78[0], r0, r4\n\tjump\t@.BB0_126\n.BB0_270:\n\tadd\tr2, r0, stack-[6]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r3\n\tsub\tstack-[6], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tsub\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_42[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r2\n\tdiv\tstack-[9], r2, stack-[7], r1\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_4[0], r1, r2\n\tjump.ne\t@.BB0_274\n\tcontext.gas_left\tr1\n\tadd\tstack-[8], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_303\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB0_294\n.BB0_182:\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[9], r0, r4\n\tadd\tr0, r0, r5\n.BB0_181:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_172:\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_173\n.BB0_179:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_183\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_75[0], r0, r4\n.BB0_126:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_127:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_173:\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_8[0], r3, r6\n\tjump.gt\t@.BB0_4\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r3\n\tand\t31, r1, r3\n\tst.1.inc\tr4, r1, r4\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r1, r1\n\tjump.eq\t@.BB0_315\n\tadd\tr0, r0, r6\n.BB0_177:\n\tshl.s\t5, r6, r7\n\tadd\tr4, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.lt\t@.BB0_177\n.BB0_315:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_179\n\tshl.s\t5, r1, r1\n\tptr.add\tr5, r1, r5\n\tadd\tr4, r1, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr5, r5\n\tsub\t256, r3, r3\n\tshr\tr5, r3, r5\n\tshl\tr5, r3, r3\n\tor\tr3, r4, r3\n\tst.1\tr1, r3\n\tjump\t@.BB0_179\n.BB0_49:\n\tsub!\tr6, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_51\n\tld.1\tr4, r1\n.BB0_51:\n\tshl.s\t3, r6, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r6, r1\n\tadd\tstack-[9], r0, r3\n.BB0_41:\n\tor\tr2, r1, r1\n\tsstore\tr5, r1\n\tst.1\t128, r3\n\tst.2\t320, r0\n\tst.2\t352, r3\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tadd\t1, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_10[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_111:\n\tsub\tr1, r3, r3\n\tadd\tstack-[9], r0, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n.BB0_108:\n\tadd\tstack-[9], r0, r1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[7], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[6], r0, r2\n.BB0_135:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_40[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_151:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_313\n\tadd\tr0, r0, r6\n.BB0_153:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_153\n.BB0_313:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_155\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_155:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_274:\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[7], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_43[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tstack-[8], r0, r1\n\tand\t@CPI0_4[0], r1, r1\n\tadd\tr4, r0, stack-[6]\n\tadd\t4, r4, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_276\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_286\n.BB0_217:\n\tld.1\t64, r1\n\tadd\t@CPI0_65[0], r0, r2\n\tjump\t@.BB0_162\n.BB0_303:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[8], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_294:\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_295\n.BB0_301:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_183\n\tld.1\t64, r1\n.BB0_273:\n\tadd\t32, r1, r2\n\tadd\tstack-[7], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_48[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tjump\t@.BB0_126\n.BB0_183:\n\tld.1\t64, r1\n.BB0_161:\n\tadd\t@CPI0_45[0], r0, r2\n\tjump\t@.BB0_162\n.BB0_276:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[6], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_44[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_319\n\tadd\tr0, r0, r7\n.BB0_278:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_278\n.BB0_319:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_280\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[6], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_280:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_281\n.BB0_286:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[6], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_8[0], r1, r4\n\tjump.gt\t@.BB0_4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_273\n\tjump\t@.BB0_161\n.BB0_295:\n\tadd\t63, r1, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_8[0], r3, r6\n\tjump.gt\t@.BB0_4\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r3\n\tand\t31, r1, r3\n\tst.1.inc\tr4, r1, r4\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r1, r1\n\tjump.eq\t@.BB0_317\n\tadd\tr0, r0, r6\n.BB0_299:\n\tshl.s\t5, r6, r7\n\tadd\tr4, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.lt\t@.BB0_299\n.BB0_317:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_301\n\tshl.s\t5, r1, r1\n\tptr.add\tr5, r1, r5\n\tadd\tr4, r1, r1\n\tshl.s\t3, r3, r3\n\tld.1\tr1, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr5, r5\n\tsub\t256, r3, r3\n\tshr\tr5, r3, r5\n\tshl\tr5, r3, r3\n\tor\tr3, r4, r3\n\tst.1\tr1, r3\n\tjump\t@.BB0_301\n.BB0_221:\n\tld.1\t64, r1\n\tadd\t@CPI0_66[0], r0, r2\n\tjump\t@.BB0_162\n.BB0_281:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_318\n\tadd\tr0, r0, r6\n.BB0_283:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_283\n.BB0_318:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_285\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_285:\n\tjump\t@.BB0_155\n.BB0_220:\n\tadd\t2, r0, stack-[3]\n\tadd\tr0, r0, r2\n.BB0_223:\n\tadd\tr2, r0, stack-[8]\n\tshl.s\t5, r2, r1\n\tadd\tr1, r8, r3\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add\tr2, r3, r3\n\tld\tr3, r3\n\tand\t@CPI0_4[0], r3, r4\n\tsub.s!\t@CPI0_67[0], r3, r3\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[5], r1, r1\n\tptr.add\tr2, r1, r1\n\tld\tr1, r5\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB0_227\n\tadd\tstack-[3], r0, r3\n\tsload\tr3, r2\n\tadd\tr5, r0, stack-[6]\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_122\n\tsstore\tr3, r1\n\tst.1\t0, r4\n\tst.1\t32, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_42[0], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r8\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r2\n\tadd\t1, r2, r2\n\tsub.s!\tstack-[9], r2, r1\n\tjump.lt\t@.BB0_223\n\tjump\t@.BB0_224\n.BB0_227:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_68[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t31, r0, r3\n\tjump\t@.BB0_110\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfinalize_allocation:\n.func_begin2:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r3\n\tjump.gt\t@.BB2_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_2\n\tst.1\t64, r1\n\tret\n.BB2_2:\n\tadd\t@CPI2_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_transfer:\n.func_begin3:\n\tnop\tstack+=[4]\n\tadd\tr3, r0, stack-[4]\n\tand!\t@CPI3_0[0], r1, r1\n\tjump.eq\t@.BB3_1\n\tand!\t@CPI3_0[0], r2, stack-[2]\n\tjump.eq\t@.BB3_4\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\tstack-[4], r2, r1\n\tjump.lt\t@.BB3_8\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI3_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tadd\tstack-[1], r0, r3\n\tsub.s\tstack-[4], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_6\n\tret\n.BB3_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB3_2\n.BB3_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB3_2\n.BB3_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n.BB3_2:\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_approve:\n.func_begin4:\n\tnop\tstack+=[3]\n\tand!\t@CPI4_0[0], r1, r1\n\tjump.eq\t@.BB4_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI4_0[0], r2, stack-[3]\n\tjump.eq\t@.BB4_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI4_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB4_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tadd.ge\t@CPI4_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI4_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI4_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI4_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI4_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB4_6\n\tret\n.BB4_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tjump\t@.BB4_2\n.BB4_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI4_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI4_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB4_2:\n\tst.1\tr2, r3\n\tadd\t@CPI4_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI4_1[0], r0, r2\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI4_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin5:\n\tadd\t@CPI6_0[0], r0, r3\n\tsub.s!\t@CPI6_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI6_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_2\n\tld\tr1, r1\n\tret\n.BB6_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\n__system_request:\n.func_begin6:\n\tadd\t@CPI7_0[0], r0, r2\n\tst.2\t0, r2\n\tshr.s\t5, r1, r1\n\tadd\tstack[r1], r0, r2\n\tst.2\t4, r2\n\tadd\tstack[1 + r1], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI7_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_2\n\tld\tr1, r1\n\tret\n.BB7_2:\n\trevert\n.func_end6:\n\n__farcall:\n.func_begin7:\n.tmp0:\n\tfar_call\tr1, r2, @.BB8_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB8_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end7:\n\n__staticcall:\n.func_begin8:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB9_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end8:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI3_1:\nCPI4_1:\nCPI6_0:\nCPI7_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551425\nCPI0_2:\n\t.cell -18446744073709551457\nCPI0_3:\n\t.cell 8589934560\nCPI0_4:\nCPI3_0:\nCPI4_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_5:\n\t.cell 18446744073709551551\nCPI0_6:\n\t.cell 16423632947344250057545933973868793984083578654631939442387441592279591026688\nCPI0_7:\n\t.cell 16423411225372866077290432658003341448763464828551565415901785436050950193152\nCPI0_8:\nCPI2_0:\n\t.cell 18446744073709551615\nCPI0_9:\nCPI3_3:\nCPI4_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_10:\n\t.cell 53919893334301279589334030174039261357415493651629346657050491355136\nCPI0_11:\n\t.cell 1292240521\nCPI0_12:\n\t.cell 2383276217\nCPI0_13:\n\t.cell 2799786231\nCPI0_14:\n\t.cell 2799786232\nCPI0_15:\n\t.cell 2835717307\nCPI0_16:\n\t.cell 3714247998\nCPI0_17:\n\t.cell 2383276218\nCPI0_18:\n\t.cell 2514000705\nCPI0_19:\n\t.cell 2757214935\nCPI0_20:\n\t.cell 1889567280\nCPI0_21:\n\t.cell 1889567281\nCPI0_22:\n\t.cell 2122446301\nCPI0_23:\n\t.cell 2295764402\nCPI0_24:\n\t.cell 1292240522\nCPI0_25:\n\t.cell 1841344034\nCPI0_26:\n\t.cell 826074470\nCPI0_27:\n\t.cell 961581904\nCPI0_28:\n\t.cell 961581905\nCPI0_29:\n\t.cell 1140870337\nCPI0_30:\n\t.cell 1199765369\nCPI0_31:\n\t.cell 826074471\nCPI0_32:\n\t.cell 848350761\nCPI0_33:\n\t.cell 404098524\nCPI0_34:\n\t.cell 404098525\nCPI0_35:\n\t.cell 565163502\nCPI0_36:\n\t.cell 599290589\nCPI0_37:\n\t.cell 117300739\nCPI0_38:\n\t.cell 157198259\nCPI0_39:\n\t.cell 2535301202817642044428229017600\nCPI0_40:\n\t.cell 2535301200456458802993406410752\nCPI0_41:\nCPI3_2:\nCPI4_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_42:\nCPI3_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_43:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_44:\n\t.cell 5387515050969974956360988622848\nCPI0_45:\n\t.cell -8966029400613540890661674332305699261960324095807706294749920740616934785024\nCPI0_46:\n\t.cell 316912650057057350374175801344\nCPI0_47:\nCPI6_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_48:\n\t.cell -21057317190342391593885744754180139289705668934128889661964801644930418119342\nCPI0_49:\n\t.cell 44957423563285989266247004906403561635230327756000124389404269791890710200320\nCPI0_50:\n\t.cell 31354931781638678494316026001312189103416802390932084224065329695412615668078\nCPI0_51:\nCPI3_7:\nCPI4_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_52:\nCPI3_8:\nCPI4_8:\n\t.cell 10458117451882892562347801444352\nCPI0_53:\n\t.cell 31354931781638678494316026001340845558170976982936511063842609339963588896115\nCPI0_54:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_55:\n\t.cell 10458117454244075803782624051200\nCPI0_56:\n\t.cell 32685117697632295551836271765006919864003127898131634698112513231548670017536\nCPI0_57:\n\t.cell 316912652418240591808998408192\nCPI0_58:\n\t.cell -36939022861969353123349258410233089055672273815346796792160045361935813705728\nCPI0_59:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_60:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_61:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_62:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_63:\nCPI7_0:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_64:\nCPI7_2:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_65:\n\t.cell -12478186199336002921119342463451059443376827425816975759098588788704044646400\nCPI0_66:\n\t.cell -48719821724254650186458298842242155243931349504150793926224222154995514998784\nCPI0_67:\n\t.cell 1461501637330902918203684832716283019655932542976\nCPI0_68:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI0_69:\n\t.cell 7922816251426433759354395033600\nCPI0_70:\n\t.cell 3618502788666131106986593281521497120414687020801267626233049500247285301247\nCPI0_71:\n\t.cell 19243229071524859876128133891090843430612754414373015673065528102020545497629\nCPI0_72:\n\t.cell -57877870487250624791089670754801552601283802755570736659170120362629804326912\nCPI0_73:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_74:\n\t.cell -2387595827272751834075959012975858326624502551444988436779035228533491511805\nCPI0_75:\n\t.cell -48533753203050220626774387317541220634914234159056522914557615600245642891492\nCPI0_76:\n\t.cell -49038604814749866173896455511409933377337512010963417713305130157944745230336\nCPI0_77:\n\t.cell 904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI0_78:\n\t.cell -28981000638086537228514907392253048753608645346305069232092362816791519276190\nCPI0_79:\nCPI2_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_80:\nCPI2_2:\n\t.cell 2852213850513516153367582212096\nCPI0_81:\n\t.cell -51039759043124182080671131213630662713527943852453536859899556462191841525135\nCPI0_82:\n\t.cell 7922816253787617000789217640448\nCPI0_83:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI0_84:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI3_5:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI3_6:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI3_9:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI3_10:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI3_11:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI3_12:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI4_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI4_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI4_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI4_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI4_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\n",
      "bytecode": {
        "object": ""
      },
      "methodIdentifiers": {
        "GOVERNOR()": "6dc0ae22",
        "airdropToken()": "4d06068a",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "batchTransfer(address[],uint256[])": "88d695b2",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "mintingDisabled()": "21afb5ee",
        "name()": "06fdde03",
        "purchaseTokens()": "3290ce29",
        "redeemTokens(uint256)": "a6e158f8",
        "redeemValue()": "8e0de8ba",
        "setPostAirdropValue(address,uint256)": "7e81f5dd",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "withdrawERC20(address,address,uint256)": "44004cc1",
        "withdrawETH(address,uint256)": "4782f779"
      }
    },
    "irOptimized": "/// @use-src 0:\"/hello-world/contracts/OrcTokens.sol\", 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"OrcsToken_375\" {\n    code {\n        {\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            let _1 := memoryguard(0xa0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"OrcsToken_375\")\n            let argSize := sub(codesize(), programSize)\n            let _2 := not(31)\n            let _3 := 31\n            let newFreePtr := add(_1, and(add(argSize, _3), _2))\n            let _4 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _4), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            let _5 := 32\n            if slt(sub(add(_1, argSize), _1), _5)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            let value := mload(_1)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            let memPtr := allocate_memory()\n            let _6 := 5\n            mstore(memPtr, _6)\n            mstore(add(memPtr, _5), \"$Orcs\")\n            let memPtr_1 := allocate_memory()\n            mstore(memPtr_1, _6)\n            mstore(add(memPtr_1, _5), \"$ORCS\")\n            let newLen := mload(memPtr)\n            if gt(newLen, _4)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x24)\n            }\n            /// @src 1:2046:2059  \"_name = name_\"\n            let _7 := 0x03\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            let _8 := sload(/** @src 1:2046:2059  \"_name = name_\" */ _7)\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            let _9 := 1\n            length := shr(_9, _8)\n            let outOfPlaceEncoding := and(_8, _9)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _5))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x24)\n            }\n            if gt(length, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2046:2059  \"_name = name_\" */ _7)\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _5)\n                let deleteStart := add(data, shr(_6, add(newLen, _3)))\n                if lt(newLen, _5) { deleteStart := data }\n                let _10 := add(data, shr(_6, add(length, _3)))\n                let start := deleteStart\n                for { } lt(start, _10) { start := add(start, _9) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            srcOffset := _5\n            switch gt(newLen, _3)\n            case 1 {\n                let loopEnd := and(newLen, _2)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2046:2059  \"_name = name_\" */ _7)\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _5)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                for { } lt(i, loopEnd) { i := add(i, _5) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, _9)\n                    srcOffset := add(srcOffset, _5)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:2046:2059  \"_name = name_\" */ _7, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ _7, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ add(shl(_9, newLen), _9))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                if newLen\n                {\n                    value_1 := mload(add(memPtr, srcOffset))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ _7, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ or(and(value_1, not(shr(shl(/** @src 1:2046:2059  \"_name = name_\" */ _7, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ newLen), not(0)))), shl(_9, newLen)))\n            }\n            let newLen_1 := mload(memPtr_1)\n            if gt(newLen_1, _4)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x24)\n            }\n            /// @src 1:2069:2086  \"_symbol = symbol_\"\n            let _11 := 0x04\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            let _12 := sload(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _11)\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            length_1 := shr(_9, _12)\n            let outOfPlaceEncoding_1 := and(_12, _9)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _5))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _11, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x24)\n            }\n            if gt(length_1, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2069:2086  \"_symbol = symbol_\" */ _11)\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _5)\n                let deleteStart_1 := add(data_1, shr(_6, add(newLen_1, _3)))\n                if lt(newLen_1, _5) { deleteStart_1 := data_1 }\n                let _13 := add(data_1, shr(_6, add(length_1, _3)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _13) { start_1 := add(start_1, _9) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            srcOffset_1 := _5\n            switch gt(newLen_1, _3)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, _2)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2069:2086  \"_symbol = symbol_\" */ _11)\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _5)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _5) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _9)\n                    srcOffset_1 := add(srcOffset_1, _5)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 1:2046:2059  \"_name = name_\" */ _7, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _11, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ add(shl(_9, newLen_1), _9))\n            }\n            default {\n                let value_2 := /** @src -1:-1:-1 */ 0\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                if newLen_1\n                {\n                    value_2 := mload(add(memPtr_1, srcOffset_1))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _11, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ or(and(value_2, not(shr(shl(/** @src 1:2046:2059  \"_name = name_\" */ _7, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ newLen_1), not(0)))), shl(_9, newLen_1)))\n            }\n            /// @src 0:1678:1698  \"GOVERNOR = _governor\"\n            mstore(128, value)\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            let _14 := mload(64)\n            let _15 := datasize(\"OrcsToken_375_deployed\")\n            codecopy(_14, dataoffset(\"OrcsToken_375_deployed\"), _15)\n            setimmutable(_14, \"7\", mload(/** @src 0:1678:1698  \"GOVERNOR = _governor\" */ 128))\n            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n            return(_14, _15)\n        }\n        function allocate_memory() -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n    }\n    /// @use-src 0:\"/hello-world/contracts/OrcTokens.sol\", 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"OrcsToken_375_deployed\" {\n        code {\n            {\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 1:2244:2249  \"_name\" */ 0x03)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        let length := _4\n                        let _5 := 1\n                        length := shr(_5, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _5)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _6 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 1:2244:2249  \"_name\" */ 0x03)\n                            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _5)\n                            }\n                            ret := add(add(_1, i), _6)\n                        }\n                        finalize_allocation(_1, sub(ret, _1))\n                        let memPos := mload(_2)\n                        return(memPos, sub(abi_encode_string(memPos, _1), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        /// @src 1:4606:4612  \"amount\"\n                        fun_approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:4606:4612  \"amount\" */ value0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ calldataload(36))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, 1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 1:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, _7)\n                        return(memPos_2, 32)\n                    }\n                    case 0x21afb5ee {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value := and(sload(/** @src 0:654:681  \"bool public mintingDisabled\" */ 7), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0xff)\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, iszero(iszero(value)))\n                        return(memPos_3, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        mstore(_4, and(param, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        let _8 := keccak256(_4, _2)\n                        mstore(_4, /** @src 4:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        mstore(0x20, _8)\n                        let _9 := sload(keccak256(_4, _2))\n                        /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 1:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_9, /** @src 1:11264:11281  \"type(uint256).max\" */ not(0)))\n                        /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                            if /** @src 1:11305:11331  \"currentAllowance >= amount\" */ lt(_9, param_2)\n                            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                            {\n                                let memPtr := mload(_2)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, _3), 0x20)\n                                mstore(add(memPtr, 36), 29)\n                                mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                                revert(memPtr, 100)\n                            }\n                            /// @src 1:11432:11457  \"currentAllowance - amount\"\n                            fun_approve(param, /** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ sub(/** @src 1:11432:11457  \"currentAllowance - amount\" */ _9, param_2))\n                        }\n                        /// @src 1:5424:5430  \"amount\"\n                        fun_transfer(param, param_1, param_2)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        return(memPos_4, 0x20)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, /** @src 1:3186:3188  \"18\" */ 0x12)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        return(memPos_5, 32)\n                    }\n                    case 0x3290ce29 {\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 0:2279:2335  \"if (mintingDisabled) revert OrcsToken__MintingDisabled()\"\n                        if /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ and(sload(/** @src 0:2283:2298  \"mintingDisabled\" */ 0x07), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0xff)\n                        /// @src 0:2279:2335  \"if (mintingDisabled) revert OrcsToken__MintingDisabled()\"\n                        {\n                            /// @src 0:2307:2335  \"OrcsToken__MintingDisabled()\"\n                            let _10 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:2307:2335  \"OrcsToken__MintingDisabled()\"\n                            mstore(_10, shl(225, 0x7234cc67))\n                            revert(_10, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        if /** @src 0:2353:2366  \"msg.value > 0\" */ iszero(/** @src 0:2353:2362  \"msg.value\" */ callvalue())\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        { revert(_4, _4) }\n                        /// @src 0:2395:2404  \"msg.value\"\n                        fun_mint(/** @src 0:2383:2393  \"msg.sender\" */ caller(), /** @src 0:2353:2362  \"msg.value\" */ callvalue())\n                        /// @src 0:2420:2458  \"TokensPurchased(msg.sender, msg.value)\"\n                        let _11 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                        mstore(_11, /** @src 0:2353:2362  \"msg.value\" */ callvalue())\n                        /// @src 0:2420:2458  \"TokensPurchased(msg.sender, msg.value)\"\n                        log2(_11, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 32, /** @src 0:2420:2458  \"TokensPurchased(msg.sender, msg.value)\" */ 0x8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc271, /** @src 0:2383:2393  \"msg.sender\" */ caller())\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        return(_4, _4)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        mstore(_4, /** @src 4:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        mstore(32, 1)\n                        let _12 := keccak256(_4, _2)\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, _12)\n                        /// @src 1:6021:6059  \"allowance(owner, spender) + addedValue\"\n                        fun_approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6021:6059  \"allowance(owner, spender) + addedValue\" */ value0_1, checked_add_uint256(/** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ sload(keccak256(_4, _2)), calldataload(36)))\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, 1)\n                        return(memPos_6, 32)\n                    }\n                    case 0x44004cc1 {\n                        if callvalue() { revert(_4, _4) }\n                        let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let _13 := sub(shl(160, 1), 1)\n                        /// @src 0:1530:1589  \"if(msg.sender != GOVERNOR) revert OrcsToken__OnlyGovernor()\"\n                        if /** @src 0:1533:1555  \"msg.sender != GOVERNOR\" */ iszero(eq(/** @src 0:1533:1543  \"msg.sender\" */ caller(), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ and(/** @src 0:1547:1555  \"GOVERNOR\" */ loadimmutable(\"7\"), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _13)))\n                        /// @src 0:1530:1589  \"if(msg.sender != GOVERNOR) revert OrcsToken__OnlyGovernor()\"\n                        {\n                            /// @src 0:1564:1589  \"OrcsToken__OnlyGovernor()\"\n                            let _14 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:1564:1589  \"OrcsToken__OnlyGovernor()\"\n                            mstore(_14, shl(225, 0x49ca910f))\n                            revert(_14, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        let _15 := and(/** @src 0:4390:4404  \"IERC20(_token)\" */ param_4, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _13)\n                        /// @src 0:4390:4434  \"IERC20(_token).transfer(_recipient, _amount)\"\n                        let _16 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                        /// @src 0:4390:4434  \"IERC20(_token).transfer(_recipient, _amount)\"\n                        mstore(_16, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 0:4390:4434  \"IERC20(_token).transfer(_recipient, _amount)\"\n                        let _17 := call(gas(), _15, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _4, /** @src 0:4390:4434  \"IERC20(_token).transfer(_recipient, _amount)\" */ _16, sub(abi_encode_address_uint256(add(_16, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3), /** @src 0:4390:4434  \"IERC20(_token).transfer(_recipient, _amount)\" */ param_3, param_5), _16), _16, 32)\n                        if iszero(_17)\n                        {\n                            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, _4, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 0:4390:4434  \"IERC20(_token).transfer(_recipient, _amount)\"\n                        let expr := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _4\n                        /// @src 0:4390:4434  \"IERC20(_token).transfer(_recipient, _amount)\"\n                        if _17\n                        {\n                            let _18 := 32\n                            if gt(_18, returndatasize()) { _18 := returndatasize() }\n                            finalize_allocation(_16, _18)\n                            expr := abi_decode_bool_fromMemory(_16, add(_16, _18))\n                        }\n                        /// @src 0:4444:4492  \"if (!success) revert OrcsToken__TransferFailed()\"\n                        if /** @src 0:4448:4456  \"!success\" */ iszero(expr)\n                        /// @src 0:4444:4492  \"if (!success) revert OrcsToken__TransferFailed()\"\n                        {\n                            /// @src 0:4465:4492  \"OrcsToken__TransferFailed()\"\n                            let _19 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:4465:4492  \"OrcsToken__TransferFailed()\"\n                            mstore(_19, shl(225, 0x7616b41f))\n                            revert(_19, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        /// @src 0:4507:4550  \"ERC20Withdrawn(_recipient, _token, _amount)\"\n                        let _20 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                        mstore(_20, and(param_3, _13))\n                        mstore(add(_20, /** @src 0:4390:4434  \"IERC20(_token).transfer(_recipient, _amount)\" */ 32), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _15)\n                        mstore(add(_20, _2), param_5)\n                        /// @src 0:4507:4550  \"ERC20Withdrawn(_recipient, _token, _amount)\"\n                        log1(_20, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 96, /** @src 0:4507:4550  \"ERC20Withdrawn(_recipient, _token, _amount)\" */ 0xbfed55bdcd242e3dd0f60ddd7d1e87c67f61c34cd9527b3e6455d841b1025362)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        return(_4, _4)\n                    }\n                    case 0x4782f779 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        /// @src 0:1530:1589  \"if(msg.sender != GOVERNOR) revert OrcsToken__OnlyGovernor()\"\n                        if /** @src 0:1533:1555  \"msg.sender != GOVERNOR\" */ iszero(eq(/** @src 0:1533:1543  \"msg.sender\" */ caller(), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ and(/** @src 0:1547:1555  \"GOVERNOR\" */ loadimmutable(\"7\"), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 0:1530:1589  \"if(msg.sender != GOVERNOR) revert OrcsToken__OnlyGovernor()\"\n                        {\n                            /// @src 0:1564:1589  \"OrcsToken__OnlyGovernor()\"\n                            let _21 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:1564:1589  \"OrcsToken__OnlyGovernor()\"\n                            mstore(_21, shl(225, 0x49ca910f))\n                            revert(_21, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        /// @src 0:4113:4148  \"_recipient.call{value: _amount}(\\\"\\\")\"\n                        let expr_component := call(gas(), value0_2, value_1, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _4, _4, _4, _4)\n                        /// @src 0:4113:4148  \"_recipient.call{value: _amount}(\\\"\\\")\"\n                        pop(extract_returndata())\n                        /// @src 0:4158:4206  \"if (!success) revert OrcsToken__TransferFailed()\"\n                        if /** @src 0:4162:4170  \"!success\" */ iszero(expr_component)\n                        /// @src 0:4158:4206  \"if (!success) revert OrcsToken__TransferFailed()\"\n                        {\n                            /// @src 0:4179:4206  \"OrcsToken__TransferFailed()\"\n                            let _22 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:4179:4206  \"OrcsToken__TransferFailed()\"\n                            mstore(_22, /** @src 0:4465:4492  \"OrcsToken__TransferFailed()\" */ shl(225, 0x7616b41f))\n                            /// @src 0:4179:4206  \"OrcsToken__TransferFailed()\"\n                            revert(_22, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        /// @src 0:4221:4254  \"ETHWithdrawn(_recipient, _amount)\"\n                        let _23 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                        /// @src 0:4221:4254  \"ETHWithdrawn(_recipient, _amount)\"\n                        log1(_23, sub(abi_encode_address_uint256(_23, value0_2, value_1), _23), 0x94b2de810873337ed265c5f8cf98c9cffefa06b8607f9a2f1fbaebdfbcfbef1c)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        return(_4, _4)\n                    }\n                    case 0x4d06068a {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_2 := and(sload(/** @src 0:375:402  \"address public airdropToken\" */ 5), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ sub(shl(160, 1), 1))\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, value_2)\n                        return(memPos_7, 32)\n                    }\n                    case 0x6dc0ae22 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, and(/** @src 0:214:247  \"address public immutable GOVERNOR\" */ loadimmutable(\"7\"), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ sub(shl(160, 1), 1)))\n                        return(memPos_8, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, _4)\n                        let _24 := sload(keccak256(_4, _2))\n                        let memPos_9 := mload(_2)\n                        mstore(memPos_9, _24)\n                        return(memPos_9, 32)\n                    }\n                    case 0x7e81f5dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address()\n                        let value_3 := calldataload(36)\n                        let _25 := sub(shl(160, 1), 1)\n                        /// @src 0:1530:1589  \"if(msg.sender != GOVERNOR) revert OrcsToken__OnlyGovernor()\"\n                        if /** @src 0:1533:1555  \"msg.sender != GOVERNOR\" */ iszero(eq(/** @src 0:1533:1543  \"msg.sender\" */ caller(), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ and(/** @src 0:1547:1555  \"GOVERNOR\" */ loadimmutable(\"7\"), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _25)))\n                        /// @src 0:1530:1589  \"if(msg.sender != GOVERNOR) revert OrcsToken__OnlyGovernor()\"\n                        {\n                            /// @src 0:1564:1589  \"OrcsToken__OnlyGovernor()\"\n                            let _26 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:1564:1589  \"OrcsToken__OnlyGovernor()\"\n                            mstore(_26, shl(225, 0x49ca910f))\n                            revert(_26, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        /// @src 0:2999:3062  \"if (redeemValue != 0) revert OrcsToken__RedeemValueAlreadySet()\"\n                        if /** @src 0:3003:3019  \"redeemValue != 0\" */ iszero(iszero(/** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ sload(/** @src 0:3003:3014  \"redeemValue\" */ 0x06)))\n                        /// @src 0:2999:3062  \"if (redeemValue != 0) revert OrcsToken__RedeemValueAlreadySet()\"\n                        {\n                            /// @src 0:3028:3062  \"OrcsToken__RedeemValueAlreadySet()\"\n                            let _27 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:3028:3062  \"OrcsToken__RedeemValueAlreadySet()\"\n                            mstore(_27, shl(226, 0x20029251))\n                            revert(_27, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        if /** @src 0:3080:3096  \"_redeemValue > 0\" */ iszero(value_3)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        { revert(_4, _4) }\n                        sstore(/** @src 0:3107:3129  \"mintingDisabled = true\" */ 0x07, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ or(and(sload(/** @src 0:3107:3129  \"mintingDisabled = true\" */ 0x07), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ not(255)), 1))\n                        sstore(/** @src 0:3139:3167  \"airdropToken = _airdropToken\" */ 0x05, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ or(and(sload(/** @src 0:3139:3167  \"airdropToken = _airdropToken\" */ 0x05), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value0_3, _25)))\n                        sstore(/** @src 0:3003:3014  \"redeemValue\" */ 0x06, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ value_3)\n                        /// @src 0:3218:3266  \"PostAirdropValueSet(_airdropToken, _redeemValue)\"\n                        let _28 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                        /// @src 0:3218:3266  \"PostAirdropValueSet(_airdropToken, _redeemValue)\"\n                        log1(_28, sub(abi_encode_address_uint256(_28, value0_3, value_3), _28), 0xfab8ab2cb8a35f5fd8fded3c101c92631d6876984cb5a444c03fa0a0dd7bce03)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        return(_4, _4)\n                    }\n                    case 0x88d695b2 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let offset := calldataload(_3)\n                        let _29 := 0xffffffffffffffff\n                        if gt(offset, _29) { revert(_4, _4) }\n                        let value0_4, value1 := abi_decode_array_address_dyn_calldata(add(_3, offset), calldatasize())\n                        let _30 := 36\n                        let offset_1 := calldataload(_30)\n                        if gt(offset_1, _29) { revert(_4, _4) }\n                        let value2, value3 := abi_decode_array_address_dyn_calldata(add(_3, offset_1), calldatasize())\n                        let _31 := sub(shl(160, 1), 1)\n                        /// @src 0:1530:1589  \"if(msg.sender != GOVERNOR) revert OrcsToken__OnlyGovernor()\"\n                        if /** @src 0:1533:1555  \"msg.sender != GOVERNOR\" */ iszero(eq(/** @src 0:1533:1543  \"msg.sender\" */ caller(), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ and(/** @src 0:1547:1555  \"GOVERNOR\" */ loadimmutable(\"7\"), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _31)))\n                        /// @src 0:1530:1589  \"if(msg.sender != GOVERNOR) revert OrcsToken__OnlyGovernor()\"\n                        {\n                            /// @src 0:1564:1589  \"OrcsToken__OnlyGovernor()\"\n                            let _32 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:1564:1589  \"OrcsToken__OnlyGovernor()\"\n                            mstore(_32, shl(225, 0x49ca910f))\n                            revert(_32, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        /// @src 0:1897:1953  \"if (mintingDisabled) revert OrcsToken__MintingDisabled()\"\n                        if /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ and(sload(/** @src 0:1901:1916  \"mintingDisabled\" */ 0x07), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0xff)\n                        /// @src 0:1897:1953  \"if (mintingDisabled) revert OrcsToken__MintingDisabled()\"\n                        {\n                            /// @src 0:1925:1953  \"OrcsToken__MintingDisabled()\"\n                            let _33 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:1925:1953  \"OrcsToken__MintingDisabled()\"\n                            mstore(_33, /** @src 0:2307:2335  \"OrcsToken__MintingDisabled()\" */ shl(225, 0x7234cc67))\n                            /// @src 0:1925:1953  \"OrcsToken__MintingDisabled()\"\n                            revert(_33, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        /// @src 0:1963:2052  \"if (_recipients.length != _amounts.length) revert OrcsToken__BatchTransferArrayMismatch()\"\n                        if /** @src 0:1967:2004  \"_recipients.length != _amounts.length\" */ iszero(eq(value1, value3))\n                        /// @src 0:1963:2052  \"if (_recipients.length != _amounts.length) revert OrcsToken__BatchTransferArrayMismatch()\"\n                        {\n                            /// @src 0:2013:2052  \"OrcsToken__BatchTransferArrayMismatch()\"\n                            let _34 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:2013:2052  \"OrcsToken__BatchTransferArrayMismatch()\"\n                            mstore(_34, shl(229, 0x04a24c77))\n                            revert(_34, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        /// @src 0:2067:2073  \"uint i\"\n                        let var_i := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _4\n                        /// @src 0:2062:2163  \"for (uint i; i < _recipients.length; ++i) {...\"\n                        for { }\n                        /** @src 0:2075:2097  \"i < _recipients.length\" */ lt(var_i, value1)\n                        /// @src 0:2067:2073  \"uint i\"\n                        {\n                            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                            if eq(var_i, /** @src 1:11264:11281  \"type(uint256).max\" */ not(0))\n                            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                            {\n                                mstore(_4, shl(224, 0x4e487b71))\n                                mstore(_3, 0x11)\n                                revert(_4, _30)\n                            }\n                            /// @src 0:2099:2102  \"++i\"\n                            var_i := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ add(var_i, 1)\n                        }\n                        /// @src 0:2099:2102  \"++i\"\n                        {\n                            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                            let value_4 := calldataload(/** @src 0:2124:2138  \"_recipients[i]\" */ calldata_array_index_access_address_dyn_calldata(value0_4, value1, var_i))\n                            /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                            if iszero(eq(value_4, and(value_4, _31))) { revert(_4, _4) }\n                            /// @src 0:2140:2151  \"_amounts[i]\"\n                            fun_mint(value_4, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ calldataload(/** @src 0:2140:2151  \"_amounts[i]\" */ calldata_array_index_access_address_dyn_calldata(value2, value3, var_i)))\n                        }\n                        /// @src 0:2177:2213  \"BatchTransfer(_recipients, _amounts)\"\n                        let _35 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                        let tail := add(_35, _2)\n                        mstore(_35, _2)\n                        let pos_1 := tail\n                        mstore(tail, value1)\n                        pos_1 := add(_35, 96)\n                        let srcPtr := value0_4\n                        let i_1 := _4\n                        for { } lt(i_1, value1) { i_1 := add(i_1, 1) }\n                        {\n                            let value_5 := calldataload(srcPtr)\n                            let _36 := and(value_5, _31)\n                            if iszero(eq(value_5, _36)) { revert(_4, _4) }\n                            mstore(pos_1, _36)\n                            let _37 := 32\n                            pos_1 := add(pos_1, _37)\n                            srcPtr := add(srcPtr, _37)\n                        }\n                        mstore(add(_35, 32), sub(pos_1, _35))\n                        mstore(pos_1, value3)\n                        if gt(value3, sub(shl(251, 1), 1)) { revert(_4, _4) }\n                        let length_1 := shl(5, value3)\n                        calldatacopy(add(pos_1, 32), value2, length_1)\n                        /// @src 0:2177:2213  \"BatchTransfer(_recipients, _amounts)\"\n                        log1(_35, add(sub(/** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ add(pos_1, length_1), /** @src 0:2177:2213  \"BatchTransfer(_recipients, _amounts)\" */ _35), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 32), /** @src 0:2177:2213  \"BatchTransfer(_recipients, _amounts)\" */ 0x2a8b481c4fd6b79532b02dcb3d102185cbfaf1fe525ae1283184c2fb15cbca1d)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        return(_4, _4)\n                    }\n                    case 0x8e0de8ba {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _38 := sload(/** @src 0:522:548  \"uint256 public redeemValue\" */ 6)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        let memPos_10 := mload(_2)\n                        mstore(memPos_10, _38)\n                        return(memPos_10, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_1 := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(_3)\n                        let length_2 := _4\n                        let _39 := 1\n                        length_2 := shr(_39, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, _39)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_2 := and(length_2, 0x7f)\n                        }\n                        let _40 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_2, _40))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_1, length_2)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, _40), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_1, shl(5, iszero(iszero(length_2)))), _40)\n                        }\n                        case 1 {\n                            mstore(_4, _3)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_2 := _4\n                            for { } lt(i_2, length_2) { i_2 := add(i_2, _40) }\n                            {\n                                mstore(add(add(memPtr_1, i_2), _40), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _39)\n                            }\n                            ret_1 := add(add(memPtr_1, i_2), _40)\n                        }\n                        finalize_allocation(memPtr_1, sub(ret_1, memPtr_1))\n                        let memPos_11 := mload(_2)\n                        return(memPos_11, sub(abi_encode_string(memPos_11, memPtr_1), memPos_11))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address()\n                        let value_6 := calldataload(36)\n                        mstore(_4, /** @src 4:719:729  \"msg.sender\" */ caller())\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        mstore(32, 1)\n                        let _41 := keccak256(_4, _2)\n                        mstore(_4, and(value0_5, sub(shl(160, 1), 1)))\n                        mstore(32, _41)\n                        let _42 := sload(keccak256(_4, _2))\n                        if /** @src 1:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_42, value_6)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 37)\n                            mstore(add(memPtr_2, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_2, 100), \" zero\")\n                            revert(memPtr_2, 132)\n                        }\n                        /// @src 1:6928:6962  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ value0_5, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ sub(/** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ _42, value_6))\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        let memPos_12 := mload(_2)\n                        mstore(memPos_12, 1)\n                        return(memPos_12, 32)\n                    }\n                    case 0xa6e158f8 {\n                        if callvalue() { revert(_4, _4) }\n                        let _43 := 32\n                        if slt(add(calldatasize(), not(3)), _43) { revert(_4, _4) }\n                        let value_7 := calldataload(_3)\n                        let _44 := sload(/** @src 0:3341:3352  \"redeemValue\" */ 0x06)\n                        /// @src 0:3337:3402  \"if (redeemValue == 0) revert OrcsToken__PostAirdropValuesNotSet()\"\n                        if /** @src 0:3341:3357  \"redeemValue == 0\" */ iszero(_44)\n                        /// @src 0:3337:3402  \"if (redeemValue == 0) revert OrcsToken__PostAirdropValuesNotSet()\"\n                        {\n                            /// @src 0:3366:3402  \"OrcsToken__PostAirdropValuesNotSet()\"\n                            let _45 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:3366:3402  \"OrcsToken__PostAirdropValuesNotSet()\"\n                            mstore(_45, shl(226, 0x2b955041))\n                            revert(_45, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        /// @src 0:3412:3482  \"if (_amount < redeemValue) revert OrcsToken__NotEnoughTokensToRedeem()\"\n                        if /** @src 0:3416:3437  \"_amount < redeemValue\" */ lt(value_7, _44)\n                        /// @src 0:3412:3482  \"if (_amount < redeemValue) revert OrcsToken__NotEnoughTokensToRedeem()\"\n                        {\n                            /// @src 0:3446:3482  \"OrcsToken__NotEnoughTokensToRedeem()\"\n                            let _46 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:3446:3482  \"OrcsToken__NotEnoughTokensToRedeem()\"\n                            mstore(_46, shl(226, 0x1210c7bf))\n                            revert(_46, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                        }\n                        let r := div(value_7, _44)\n                        if /** @src 1:9458:9479  \"account != address(0)\" */ iszero(/** @src 0:3554:3564  \"msg.sender\" */ caller())\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        {\n                            let memPtr_3 := mload(_2)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _3), _43)\n                            mstore(add(memPtr_3, 36), 33)\n                            mstore(add(memPtr_3, 68), \"ERC20: burn from the zero addres\")\n                            mstore(add(memPtr_3, 100), \"s\")\n                            revert(memPtr_3, 132)\n                        }\n                        mstore(_4, /** @src 0:3554:3564  \"msg.sender\" */ caller())\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        mstore(_43, _4)\n                        let _47 := sload(keccak256(_4, _2))\n                        if /** @src 1:9649:9673  \"accountBalance >= amount\" */ lt(_47, value_7)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        {\n                            let memPtr_4 := mload(_2)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, _3), _43)\n                            mstore(add(memPtr_4, 36), 34)\n                            mstore(add(memPtr_4, 68), \"ERC20: burn amount exceeds balan\")\n                            mstore(add(memPtr_4, 100), \"ce\")\n                            revert(memPtr_4, 132)\n                        }\n                        mstore(_4, /** @src 0:3554:3564  \"msg.sender\" */ caller())\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        mstore(_43, _4)\n                        sstore(keccak256(_4, _2), sub(/** @src 1:9767:9790  \"accountBalance - amount\" */ _47, value_7))\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        sstore(/** @src 1:9883:9905  \"_totalSupply -= amount\" */ 0x02, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ sub(sload(/** @src 1:9883:9905  \"_totalSupply -= amount\" */ 0x02), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ value_7))\n                        /// @src 1:9931:9968  \"Transfer(account, address(0), amount)\"\n                        let _48 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                        mstore(_48, value_7)\n                        /// @src 1:9931:9968  \"Transfer(account, address(0), amount)\"\n                        log3(_48, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _43, /** @src 1:9931:9968  \"Transfer(account, address(0), amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 0:3554:3564  \"msg.sender\" */ caller(), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _4)\n                        let value_8 := and(sload(/** @src 0:3589:3601  \"airdropToken\" */ 0x05), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:3585:3927  \"if (airdropToken == address(0)) {...\"\n                        switch /** @src 0:3589:3615  \"airdropToken == address(0)\" */ iszero(/** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ value_8)\n                        case /** @src 0:3585:3927  \"if (airdropToken == address(0)) {...\" */ 0 {\n                            /// @src 0:3799:3854  \"IERC20(airdropToken).transfer(msg.sender, redeemAmount)\"\n                            let _49 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                            /// @src 0:3799:3854  \"IERC20(airdropToken).transfer(msg.sender, redeemAmount)\"\n                            mstore(_49, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ shl(224, 0xa9059cbb))\n                            /// @src 0:3799:3854  \"IERC20(airdropToken).transfer(msg.sender, redeemAmount)\"\n                            let _50 := call(gas(), value_8, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _4, /** @src 0:3799:3854  \"IERC20(airdropToken).transfer(msg.sender, redeemAmount)\" */ _49, sub(abi_encode_address_uint256(add(_49, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3), /** @src 0:3554:3564  \"msg.sender\" */ caller(), /** @src 0:3799:3854  \"IERC20(airdropToken).transfer(msg.sender, redeemAmount)\" */ r), _49), _49, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _43)\n                            /// @src 0:3799:3854  \"IERC20(airdropToken).transfer(msg.sender, redeemAmount)\"\n                            if iszero(_50)\n                            {\n                                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                                let pos_2 := mload(_2)\n                                returndatacopy(pos_2, _4, returndatasize())\n                                revert(pos_2, returndatasize())\n                            }\n                            /// @src 0:3799:3854  \"IERC20(airdropToken).transfer(msg.sender, redeemAmount)\"\n                            let expr_1 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _4\n                            /// @src 0:3799:3854  \"IERC20(airdropToken).transfer(msg.sender, redeemAmount)\"\n                            if _50\n                            {\n                                let _51 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _43\n                                /// @src 0:3799:3854  \"IERC20(airdropToken).transfer(msg.sender, redeemAmount)\"\n                                if gt(/** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _43, /** @src 0:3799:3854  \"IERC20(airdropToken).transfer(msg.sender, redeemAmount)\" */ returndatasize()) { _51 := returndatasize() }\n                                finalize_allocation(_49, _51)\n                                expr_1 := abi_decode_bool_fromMemory(_49, add(_49, _51))\n                            }\n                            /// @src 0:3868:3916  \"if (!success) revert OrcsToken__TransferFailed()\"\n                            if /** @src 0:3872:3880  \"!success\" */ iszero(expr_1)\n                            /// @src 0:3868:3916  \"if (!success) revert OrcsToken__TransferFailed()\"\n                            {\n                                /// @src 0:3889:3916  \"OrcsToken__TransferFailed()\"\n                                let _52 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                                /// @src 0:3889:3916  \"OrcsToken__TransferFailed()\"\n                                mstore(_52, /** @src 0:4465:4492  \"OrcsToken__TransferFailed()\" */ shl(225, 0x7616b41f))\n                                /// @src 0:3889:3916  \"OrcsToken__TransferFailed()\"\n                                revert(_52, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                            }\n                        }\n                        default /// @src 0:3585:3927  \"if (airdropToken == address(0)) {...\"\n                        {\n                            /// @src 0:3650:3690  \"msg.sender.call{value: redeemAmount}(\\\"\\\")\"\n                            let expr_component_1 := call(gas(), /** @src 0:3554:3564  \"msg.sender\" */ caller(), /** @src 0:3650:3690  \"msg.sender.call{value: redeemAmount}(\\\"\\\")\" */ r, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _4, _4, _4, _4)\n                            /// @src 0:3650:3690  \"msg.sender.call{value: redeemAmount}(\\\"\\\")\"\n                            pop(extract_returndata())\n                            /// @src 0:3704:3752  \"if (!success) revert OrcsToken__TransferFailed()\"\n                            if /** @src 0:3708:3716  \"!success\" */ iszero(expr_component_1)\n                            /// @src 0:3704:3752  \"if (!success) revert OrcsToken__TransferFailed()\"\n                            {\n                                /// @src 0:3725:3752  \"OrcsToken__TransferFailed()\"\n                                let _53 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                                /// @src 0:3725:3752  \"OrcsToken__TransferFailed()\"\n                                mstore(_53, /** @src 0:4465:4492  \"OrcsToken__TransferFailed()\" */ shl(225, 0x7616b41f))\n                                /// @src 0:3725:3752  \"OrcsToken__TransferFailed()\"\n                                revert(_53, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                            }\n                        }\n                        /// @src 0:3942:3991  \"TokensRedeemed(msg.sender, _amount, redeemAmount)\"\n                        let _54 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(_2)\n                        mstore(_54, value_7)\n                        mstore(add(_54, _43), r)\n                        /// @src 0:3942:3991  \"TokensRedeemed(msg.sender, _amount, redeemAmount)\"\n                        log2(_54, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _2, /** @src 0:3942:3991  \"TokensRedeemed(msg.sender, _amount, redeemAmount)\" */ 0xd171fb179b26c49e23fe46eddd44d3048a1ad277b62144ac0725fbcf1dbf6d52, /** @src 0:3554:3564  \"msg.sender\" */ caller())\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        return(_4, _4)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_6 := abi_decode_address()\n                        /// @src 1:3894:3900  \"amount\"\n                        fun_transfer(/** @src 4:719:729  \"msg.sender\" */ caller(), /** @src 1:3894:3900  \"amount\" */ value0_6, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ calldataload(36))\n                        let memPos_13 := mload(_2)\n                        mstore(memPos_13, 1)\n                        return(memPos_13, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_7 := abi_decode_address()\n                        let value_9 := calldataload(36)\n                        let _55 := sub(shl(160, 1), 1)\n                        let _56 := and(value_9, _55)\n                        if iszero(eq(value_9, _56)) { revert(_4, _4) }\n                        mstore(_4, and(value0_7, _55))\n                        mstore(32, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                        /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                        let _57 := keccak256(_4, _2)\n                        mstore(_4, _56)\n                        mstore(32, _57)\n                        let _58 := sload(keccak256(_4, _2))\n                        let memPos_14 := mload(_2)\n                        mstore(memPos_14, _58)\n                        return(memPos_14, 32)\n                    }\n                }\n                if iszero(calldatasize()) { stop() }\n                stop()\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n            }\n            function calldata_array_index_access_address_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(base_ref, shl(5, index))\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                value0 := value\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    if gt(_1, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x24)\n                    }\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, add(and(add(_1, 31), not(31)), 0x20))\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ returndatasize())\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 722 @src 1:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_amount)\n            {\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 1:7552:7570  \"from != address(0)\" */ var_from, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _1)\n                if /** @src 1:7552:7570  \"from != address(0)\" */ iszero(/** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 1:7630:7646  \"to != address(0)\" */ var_to, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _1)\n                if /** @src 1:7630:7646  \"to != address(0)\" */ iszero(/** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 1:7568:7569  \"0\"\n                let _4 := 0x00\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _2)\n                mstore(0x20, /** @src 1:7568:7569  \"0\" */ _4)\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                let _5 := sload(keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x40))\n                if /** @src 1:7801:7822  \"fromBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                {\n                    let memPtr_2 := mload(0x40)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 0x20)\n                    mstore(add(memPtr_2, 36), 38)\n                    mstore(add(memPtr_2, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_2, 100), \"alance\")\n                    revert(memPtr_2, 132)\n                }\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _2)\n                mstore(0x20, /** @src 1:7568:7569  \"0\" */ _4)\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                sstore(keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x40), sub(/** @src 1:7917:7937  \"fromBalance - amount\" */ _5, var_amount))\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                let dataSlot := keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 1:8114:8137  \"_balances[to] += amount\" */ dataSlot), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ var_amount))\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                let _6 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_6, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x20, /** @src 1:8163:8189  \"Transfer(from, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 779 @src 1:8520:9055  \"function _mint(address account, uint256 amount) internal virtual {...\"\n            function fun_mint(var_account, var_amount)\n            {\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                let _1 := and(/** @src 1:8603:8624  \"account != address(0)\" */ var_account, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ sub(shl(160, 1), 1))\n                if /** @src 1:8603:8624  \"account != address(0)\" */ iszero(/** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 31)\n                    mstore(add(memPtr, 68), \"ERC20: mint to the zero address\")\n                    revert(memPtr, 100)\n                }\n                sstore(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02, checked_add_uint256(/** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ sload(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02), var_amount))\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                mstore(/** @src 1:8622:8623  \"0\" */ 0x00, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 1:8622:8623  \"0\" */ 0x00)\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                let dataSlot := keccak256(/** @src 1:8622:8623  \"0\" */ 0x00, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 1:8899:8927  \"_balances[account] += amount\" */ dataSlot), /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ var_amount))\n                /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n                let _2 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(0x40)\n                mstore(_2, var_amount)\n                /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n                log3(_2, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x20, /** @src 1:8952:8989  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 1:8622:8623  \"0\" */ 0x00, /** @src 1:8952:8989  \"Transfer(address(0), account, amount)\" */ _1)\n            }\n            /// @ast-id 896 @src 1:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 1:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _1)\n                if /** @src 1:10558:10577  \"owner != address(0)\" */ iszero(/** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 1:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _1)\n                if /** @src 1:10636:10657  \"spender != address(0)\" */ iszero(/** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _2)\n                mstore(0x20, /** @src 1:10707:10718  \"_allowances\" */ 0x01)\n                /// @src 0:179:4560  \"contract OrcsToken is ERC20 {...\"\n                let _4 := keccak256(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x40)\n                mstore(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x40), var_amount)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 0:179:4560  \"contract OrcsToken is ERC20 {...\" */ 0x20, /** @src 1:10758:10790  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122073162408b8e6760c8dcb3fc076f4a18ab64a8894962821fca918459ee1fe507c64736f6c63430008130033\"\n    }\n}\n",
    "hash": "01000287ea82ed44bcb6a697684c1595abcabaa078bf21f748bc924f655d02ac",
    "factoryDependencies": {}
  }
